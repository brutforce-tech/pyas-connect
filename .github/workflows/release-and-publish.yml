name: Release & Publish

# Run manually OR every commit to main. Pick one trigger or keep both.
on:
  push:
    branches: [master]

  pull_request:
    types: [closed]
    branches: [master]
  workflow_dispatch:

jobs:
  version-pr:
    # Skip if the commit that triggered this *is already* a release commit
    if: ${{ !contains(github.event.head_commit.message, 'chore(release)') }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0      # we need history+tags for lerna

      - name: Set up git user
        run: |
          git config user.name  "pyas-release-bot"
          git config user.email "bot@pyas.io"
      - id: bump
        name: Bump versions & create branch
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm install --ignore-scripts
          # version bump (no private pkgs, ignore demos, NO push)
          npm_config_userconfig=.npmrc.publish \
            npx lerna version --conventional-commits \
              --no-private --ignore-changes "*example" --yes --no-push --no-git-tag-version
          VERSION=$(jq -r .version < packages/connect/package.json)
          BRANCH="release/v$VERSION"
          git switch -c "$BRANCH"
          git push -u origin "$BRANCH" --follow-tags
          echo "branch=$BRANCH"   >> "$GITHUB_OUTPUT"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Open PR to master
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GH_PAT_RELEASE }}
          base: master
          branch: ${{ steps.bump.outputs.branch }}
          title: "chore(release): v${{ steps.bump.outputs.version }}"
          body: "Automated version bump & changelogs"

  publish:
    needs: version-pr
    # This only runs *after* the release branch PR is merged to master
    if: ${{ (github.event_name == 'pull_request' && github.event.pull_request.merged == true && startsWith(github.event.pull_request.title, 'chore(release)')) || (github.event_name == 'push' && startsWith(github.event.head_commit.message, 'chore(release)')) }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set npm auth
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc.publish

      - name: Build (safety)
        run: npm run build

      - name: Publish tagged packages
        run: npm run publish:libs
